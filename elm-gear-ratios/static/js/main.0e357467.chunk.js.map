{"version":3,"sources":["GearRatios.elm","registerServiceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","A2","A3","A4","A5","_JsArray_initialize","size","offset","func","result","Array","i","_JsArray_initializeFromList","max","ls","length","_Utils_Tuple2","_List_Nil","$","_List_Cons","hd","tl","_List_cons","_List_fromArray","arr","out","_Debug_crash","identifier","Error","_Utils_eqHelp","x","y","depth","stack","push","key","elm$core$Dict$toList","_Utils_cmp","ord","_Utils_Tuple3","_Utils_chr","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","xs","ys","root","curr","_String_cons","chr","str","_String_foldr","state","string","char","word","charCodeAt","_String_split","sep","split","_String_slice","start","end","slice","_String_startsWith","sub","indexOf","_String_fromNumber","number","_Basics_ceiling","Math","ceil","_Basics_floor","floor","_Basics_round","round","_Basics_log","log","_Basics_isNaN","isNaN","_Json_decodePrim","decoder","value","_Json_expecting","elm$core$Result$Ok","isFinite","_Json_decodeFloat","_Json_decodeString","_Json_wrap","String","_Json_decodeField","field","_Json_mapMany","decoders","g","_Json_andThen","callback","h","_Json_map1","d1","_Json_map2","d2","_Json_map3","d3","_Json_map4","d4","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","elm$core$Result$isOk","elm$core$Result$Err","elm$json$Json$Decode$Field","index","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","answer","errors","temp","elm$json$Json$Decode$OneOf","elm$json$Json$Decode$Failure","toElmValue","len","array","isArray","FileList","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Scheduler_succeed","_Scheduler_binding","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_instantiateManager","info","sendToApp","router","undefined","onEffects","onSelfMsg","cmdMap","subMap","loop","msg","j","_Platform_sendToApp","_Platform_batch","list","m","_VirtualDom_divertHrefToApp","_Platform_map","tagger","bag","n","o","_Platform_dispatchEffects","managers","cmdBag","subBag","effectsDict","home","_Platform_gatherEffects","isCmd","taggers","k","effect","q","p","l","_Platform_toEffect","newEffect","effects","_Platform_insert","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","_VirtualDom_node","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_nodeNS","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_map","node","_VirtualDom_on","handler","_VirtualDom_style","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","pair","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","r","stopPropagation","ac","currentEventNode","_","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","s","t","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","init","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","aZ","a7","a5","initialModel","view","a9","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","cancelAnimationFrame","requestAnimationFrame","setTimeout","initialSliderModel","exports","author$project$GearRatios$GearRatio$GearRatio","author$project$GearRatios$GearRatio$defaultGearRatio","author$project$GearRatios$Update$nullFormatter","elm$core$List$cons","elm$core$Dict$foldr","acc","left","$temp$func","$temp$acc","dict","elm$core$Maybe$Just","elm$core$Maybe$Nothing","elm$core$String$fromFloat","carwow$elm_slider$SingleSlider$defaultModel","af","currentValue","isEqual","pop","_Utils_eq","E","ap","aq","ar","I","aG","S","elm$core$Array$Array_elm_builtin","elm$core$Basics$ceiling","elm$core$Basics$logBase","base","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Elm$JsArray$initializeFromList","elm$core$List$foldl","elm$core$Array$compressNodes","nodes","_n0","remainingNodes","newAcc","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Elm$JsArray$length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","tree","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fn","fromIndex","tail","leaf","tailLen","elm$core$Char$toCode","code","elm$core$String$fromInt","elm$core$String$uncons","elm$core$String$split","elm$core$Platform$Cmd$batch","elm$core$Platform$Cmd$none","author$project$GearRatios$Update$init","aQ","aW","a4","author$project$GearRatios$Types$CogSliderMsg","author$project$GearRatios$Types$RingSliderMsg","elm$core$Platform$Sub$batch","elm$core$Platform$Sub$none","carwow$elm_slider$SingleSlider$subscriptions","elm$core$Platform$Sub$map","author$project$GearRatios$GearRatio$setCogSize","cog","elm$core$Basics$round","carwow$elm_slider$SingleSlider$snapValue","roundedStep","adjustedRoundedStep","newValue","elm$core$Maybe$withDefault","_default","maybe","elm$core$String$toFloat","test","carwow$elm_slider$SingleSlider$update","shouldFetchModels","elm$core$Platform$Cmd$map","author$project$GearRatios$Update$handleCogSliderMsg","newSlider","cmd","updateResults","author$project$GearRatios$GearRatio$setRingSize","ring","author$project$GearRatios$Update$handleRingSliderMsg","author$project$GearRatios$Update$update","elm$core$Basics$clamp","carwow$elm_slider$SingleSlider$TrackClicked","elm$json$Json$Decode$field","elm$json$Json$Decode$float","debois$elm_dom$DOM$offsetHeight","debois$elm_dom$DOM$offsetWidth","debois$elm_dom$DOM$offsetLeft","debois$elm_dom$DOM$offsetParent","debois$elm_dom$DOM$offsetTop","debois$elm_dom$DOM$scrollLeft","debois$elm_dom$DOM$scrollTop","elm$json$Json$Decode$andThen","elm$json$Json$Decode$map4","debois$elm_dom$DOM$position","x_","y_","scrollLeftP","scrollTopP","offsetLeftP","offsetTopP","debois$elm_dom$DOM$boundingClientRect","width","height","al","X","aJ","T","elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$json$Json$Decode$at","fields","elm$json$Json$Decode$map","elm$json$Json$Decode$map2","carwow$elm_slider$SingleSlider$closestStep","step","roundedValue","remainder","carwow$elm_slider$SingleSlider$RangeChanged","elm$json$Json$Decode$string","elm$html$Html$Events$targetValue","elm$json$Json$Decode$succeed","carwow$elm_slider$SingleSlider$onRangeChange","elm$core$List$append","elm$html$Html$div","elm$html$Html$input","elm$html$Html$text","elm$json$Json$Encode$string","elm$html$Html$Attributes$stringProperty","elm$html$Html$Attributes$class","elm$json$Json$Encode$bool","elm$html$Html$Attributes$disabled","bool","elm$html$Html$Attributes$boolProperty","elm$html$Html$Attributes$max","elm$html$Html$Attributes$min","elm$html$Html$Attributes$style","elm$html$Html$Attributes$type_","elm$html$Html$Attributes$value","elm$virtual_dom$VirtualDom$on","elm$html$Html$Events$on","carwow$elm_slider$SingleSlider$view","trackAttributes","trackAllAttributes","valueDecoder","rectangle","mouseX","carwow$elm_slider$SingleSlider$onOutsideRangeClick","progressPercentages","progressRatio","aa","carwow$elm_slider$SingleSlider$calculateProgressPercentages","progressAttributes","progressAllAttributes","adjustedValue","carwow$elm_slider$SingleSlider$onInsideRangeClick","elm$html$Html$map","elm$core$Basics$abs","elm$core$Basics$isNaN","elm$core$Maybe$map","elm$core$String$length","elm$core$String$cons","elm$core$String$fromChar","_char","elm$core$String$repeatHelp","chunk","elm$core$String$repeat","elm$core$String$padRight","elm$core$String$reverse","join","elm$core$String$slice","elm$core$List$any","isOkay","elm$core$String$foldr","myrho$elm_round$Round$addSign","signed","myrho$elm_round$Round$increaseNum","head","_n1","fromCharCode","myrho$elm_round$Round$splitComma","elm$core$String$dropLeft","elm$core$String$startsWith","elm$core$Tuple$mapFirst","myrho$elm_round$Round$round","functor","fl","Infinity","num","exp","total","code0","elm$core$String$toInt","_n2","zeroed","_n3","myrho$elm_round$Round$toDecimal","before","after","normalized","totalLen","roundDigitIndex","increase","remains","numLen","numZeroed","myrho$elm_round$Round$roundFun","elm$core$Task$succeed","elm$core$Task$init","elm$core$List$map","elm$core$Task$andThen","elm$core$Task$map","taskA","elm$core$Task$map2","taskB","elm$core$Platform$sendToApp","elm$core$Task$spawnCmd","_Scheduler_spawn","commands","tasks","GearRatios","slider","cogSlider","gearRatio","author$project$GearRatios$View$renderCogSlider","author$project$GearRatios$View$renderGearRatio","author$project$GearRatios$main","_Platform_mergeExportsProd","obj","this","isLocalhost","registerValidSW","swUrl","navigator","registration","installingWorker","installing","controller","console","error","Elm","URL","process","location","publicUrl","origin","concat","fetch","response","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0e357467.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.ab.F === region.ah.F)\n\t{\n\t\treturn 'on line ' + region.ab.F;\n\t}\n\treturn 'on lines ' + region.ab.F + ' through ' + region.ah.F;\n}\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList === 'function' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aZ,\n\t\timpl.a7,\n\t\timpl.a5,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tr: func(record.r),\n\t\tac: record.ac,\n\t\t_: record._\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.r;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.ac;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value._) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aZ,\n\t\timpl.a7,\n\t\timpl.a5,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.a9;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aZ,\n\t\timpl.a7,\n\t\timpl.a5,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.J && impl.J(sendToApp)\n\t\t\tvar view = impl.a9;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.aO);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.a6) && (_VirtualDom_doc.title = title = doc.a6);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.a0;\n\tvar onUrlRequest = impl.a1;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tJ: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.aA === next.aA\n\t\t\t\t\t\t\t&& curr.am === next.am\n\t\t\t\t\t\t\t&& curr.ax.a === next.ax.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\taZ: function(flags)\n\t\t{\n\t\t\treturn A3(impl.aZ, flags, _Browser_getUrl(), key);\n\t\t},\n\t\ta9: impl.a9,\n\t\ta7: impl.a7,\n\t\ta5: impl.a5\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { aX: 'hidden', aP: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { aX: 'mozHidden', aP: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { aX: 'msHidden', aP: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { aX: 'webkitHidden', aP: 'webkitvisibilitychange' }\n\t\t: { aX: 'hidden', aP: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taF: _Browser_getScene(),\n\t\taK: {\n\t\t\tU: _Browser_window.pageXOffset,\n\t\t\tV: _Browser_window.pageYOffset,\n\t\t\tT: _Browser_doc.documentElement.clientWidth,\n\t\t\tal: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tT: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tal: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taF: {\n\t\t\t\tT: node.scrollWidth,\n\t\t\t\tal: node.scrollHeight\n\t\t\t},\n\t\t\taK: {\n\t\t\t\tU: node.scrollLeft,\n\t\t\t\tV: node.scrollTop,\n\t\t\t\tT: node.clientWidth,\n\t\t\t\tal: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taF: _Browser_getScene(),\n\t\t\taK: {\n\t\t\t\tU: x,\n\t\t\t\tV: y,\n\t\t\t\tT: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tal: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\taR: {\n\t\t\t\tU: x + rect.left,\n\t\t\t\tV: y + rect.top,\n\t\t\t\tT: rect.width,\n\t\t\t\tal: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\nvar author$project$GearRatios$GearRatio$cogDefault = 16;\nvar author$project$GearRatios$GearRatio$cogMax = 36;\nvar author$project$GearRatios$GearRatio$cogMin = 11;\nvar author$project$GearRatios$GearRatio$Cog = elm$core$Basics$identity;\nvar author$project$GearRatios$GearRatio$GearRatio = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar author$project$GearRatios$GearRatio$Ring = elm$core$Basics$identity;\nvar author$project$GearRatios$GearRatio$ringDefault = 50;\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar author$project$GearRatios$GearRatio$defaultGearRatio = A2(author$project$GearRatios$GearRatio$GearRatio, author$project$GearRatios$GearRatio$ringDefault, 16);\nvar author$project$GearRatios$GearRatio$ringMax = 53;\nvar author$project$GearRatios$GearRatio$ringMin = 40;\nvar author$project$GearRatios$Update$nullFormatter = function (_n0) {\n\treturn '';\n};\nvar carwow$elm_slider$SingleSlider$ProgressLeft = 0;\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$Basics$EQ = 1;\nvar elm$core$Basics$LT = 0;\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$GT = 2;\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0;\n\treturn elm$core$Dict$keys(dict);\n};\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Maybe$Nothing = {$: 1};\nvar elm$core$String$fromFloat = _String_fromNumber;\nvar carwow$elm_slider$SingleSlider$defaultCurrentValueFormatter = F2(\n\tfunction (currentValue, max) {\n\t\treturn _Utils_eq(currentValue, max) ? '' : elm$core$String$fromFloat(currentValue);\n\t});\nvar elm$core$Basics$False = 1;\nvar carwow$elm_slider$SingleSlider$defaultModel = {af: carwow$elm_slider$SingleSlider$defaultCurrentValueFormatter, E: false, ap: 100, aq: elm$core$String$fromFloat, ar: 0, as: elm$core$String$fromFloat, I: 0, aG: 10, S: 0};\nvar elm$core$Basics$True = 0;\nvar elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.a) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.c),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.c);\n\t\t} else {\n\t\t\tvar treeLen = builder.a * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.d) : builder.d;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.a);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.c) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.c);\n\t\t}\n\t});\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{d: nodeList, a: (len / elm$core$Array$branchFactor) | 0, c: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$fromInt = _String_fromNumber;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar author$project$GearRatios$Update$init = function () {\n\tvar initialSliderModel = carwow$elm_slider$SingleSlider$defaultModel;\n\treturn _Utils_Tuple2(\n\t\t{\n\t\t\taQ: _Utils_update(\n\t\t\t\tinitialSliderModel,\n\t\t\t\t{\n\t\t\t\t\taf: F2(\n\t\t\t\t\t\tfunction (_n0, _n1) {\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t}),\n\t\t\t\t\tap: author$project$GearRatios$GearRatio$cogMax,\n\t\t\t\t\taq: author$project$GearRatios$Update$nullFormatter,\n\t\t\t\t\tar: author$project$GearRatios$GearRatio$cogMin,\n\t\t\t\t\tas: author$project$GearRatios$Update$nullFormatter,\n\t\t\t\t\taG: 1,\n\t\t\t\t\tS: author$project$GearRatios$GearRatio$cogDefault\n\t\t\t\t}),\n\t\t\taW: author$project$GearRatios$GearRatio$defaultGearRatio,\n\t\t\ta4: _Utils_update(\n\t\t\t\tinitialSliderModel,\n\t\t\t\t{\n\t\t\t\t\taf: F2(\n\t\t\t\t\t\tfunction (_n2, _n3) {\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t}),\n\t\t\t\t\tap: author$project$GearRatios$GearRatio$ringMax,\n\t\t\t\t\taq: author$project$GearRatios$Update$nullFormatter,\n\t\t\t\t\tar: author$project$GearRatios$GearRatio$ringMin,\n\t\t\t\t\tas: author$project$GearRatios$Update$nullFormatter,\n\t\t\t\t\taG: 1,\n\t\t\t\t\tS: author$project$GearRatios$GearRatio$ringDefault\n\t\t\t\t})\n\t\t},\n\t\telm$core$Platform$Cmd$none);\n}();\nvar author$project$GearRatios$Types$CogSliderMsg = function (a) {\n\treturn {$: 1, a: a};\n};\nvar author$project$GearRatios$Types$RingSliderMsg = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Platform$Sub$batch = _Platform_batch;\nvar elm$core$Platform$Sub$none = elm$core$Platform$Sub$batch(_List_Nil);\nvar carwow$elm_slider$SingleSlider$subscriptions = function (model) {\n\treturn elm$core$Platform$Sub$none;\n};\nvar elm$core$Platform$Sub$map = _Platform_map;\nvar author$project$GearRatios$Update$subscriptions = function (_n0) {\n\tvar cogSlider = _n0.aQ;\n\tvar ringSlider = _n0.a4;\n\treturn elm$core$Platform$Sub$batch(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$core$Platform$Sub$map,\n\t\t\t\tauthor$project$GearRatios$Types$RingSliderMsg,\n\t\t\t\tcarwow$elm_slider$SingleSlider$subscriptions(ringSlider)),\n\t\t\t\tA2(\n\t\t\t\telm$core$Platform$Sub$map,\n\t\t\t\tauthor$project$GearRatios$Types$CogSliderMsg,\n\t\t\t\tcarwow$elm_slider$SingleSlider$subscriptions(cogSlider))\n\t\t\t]));\n};\nvar author$project$GearRatios$GearRatio$setCogSize = F2(\n\tfunction (_n0, cog) {\n\t\tvar ring = _n0.a;\n\t\treturn A2(author$project$GearRatios$GearRatio$GearRatio, ring, cog);\n\t});\nvar elm$core$Basics$round = _Basics_round;\nvar carwow$elm_slider$SingleSlider$snapValue = F2(\n\tfunction (value, model) {\n\t\tvar roundedStep = elm$core$Basics$round(model.aG);\n\t\tvar adjustedRoundedStep = (roundedStep > 0) ? roundedStep : 1;\n\t\tvar newValue = value / adjustedRoundedStep;\n\t\tvar roundedValue = function () {\n\t\t\tvar _n0 = model.I;\n\t\t\tif (!_n0) {\n\t\t\t\treturn elm$core$Basics$floor(newValue);\n\t\t\t} else {\n\t\t\t\treturn elm$core$Basics$ceiling(newValue);\n\t\t\t}\n\t\t}();\n\t\tvar nextValue = roundedValue * adjustedRoundedStep;\n\t\treturn nextValue;\n\t});\nvar elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar elm$core$String$toFloat = _String_toFloat;\nvar carwow$elm_slider$SingleSlider$update = F2(\n\tfunction (message, model) {\n\t\tif (message.$ === 1) {\n\t\t\tvar newValue = message.a;\n\t\t\tvar shouldFetchModels = message.b;\n\t\t\tvar convertedValue = A2(\n\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t0,\n\t\t\t\telm$core$String$toFloat(newValue));\n\t\t\tvar newModel = _Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{S: convertedValue});\n\t\t\treturn _Utils_Tuple3(newModel, elm$core$Platform$Cmd$none, shouldFetchModels);\n\t\t} else {\n\t\t\tvar newValue = message.a;\n\t\t\tvar convertedValue = A2(\n\t\t\t\tcarwow$elm_slider$SingleSlider$snapValue,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t\tmodel.ar,\n\t\t\t\t\telm$core$String$toFloat(newValue)),\n\t\t\t\tmodel);\n\t\t\tvar newModel = _Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{S: convertedValue});\n\t\t\treturn _Utils_Tuple3(newModel, elm$core$Platform$Cmd$none, true);\n\t\t}\n\t});\nvar elm$core$Platform$Cmd$map = _Platform_map;\nvar author$project$GearRatios$Update$handleCogSliderMsg = F2(\n\tfunction (msg, model) {\n\t\tvar _n0 = A2(carwow$elm_slider$SingleSlider$update, msg, model.aQ);\n\t\tvar newSlider = _n0.a;\n\t\tvar cmd = _n0.b;\n\t\tvar updateResults = _n0.c;\n\t\tvar newModel = _Utils_update(\n\t\t\tmodel,\n\t\t\t{\n\t\t\t\taQ: newSlider,\n\t\t\t\taW: A2(\n\t\t\t\t\tauthor$project$GearRatios$GearRatio$setCogSize,\n\t\t\t\t\tmodel.aW,\n\t\t\t\t\telm$core$Basics$round(newSlider.S))\n\t\t\t});\n\t\tvar newCmd = updateResults ? elm$core$Platform$Cmd$batch(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(elm$core$Platform$Cmd$map, author$project$GearRatios$Types$CogSliderMsg, cmd),\n\t\t\t\t\telm$core$Platform$Cmd$none\n\t\t\t\t])) : elm$core$Platform$Cmd$none;\n\t\treturn _Utils_Tuple2(newModel, newCmd);\n\t});\nvar author$project$GearRatios$GearRatio$setRingSize = F2(\n\tfunction (_n0, ring) {\n\t\tvar cog = _n0.b;\n\t\treturn A2(author$project$GearRatios$GearRatio$GearRatio, ring, cog);\n\t});\nvar author$project$GearRatios$Update$handleRingSliderMsg = F2(\n\tfunction (msg, model) {\n\t\tvar _n0 = A2(carwow$elm_slider$SingleSlider$update, msg, model.a4);\n\t\tvar newSlider = _n0.a;\n\t\tvar cmd = _n0.b;\n\t\tvar updateResults = _n0.c;\n\t\tvar newModel = _Utils_update(\n\t\t\tmodel,\n\t\t\t{\n\t\t\t\taW: A2(\n\t\t\t\t\tauthor$project$GearRatios$GearRatio$setRingSize,\n\t\t\t\t\tmodel.aW,\n\t\t\t\t\telm$core$Basics$round(newSlider.S)),\n\t\t\t\ta4: newSlider\n\t\t\t});\n\t\tvar newCmd = updateResults ? elm$core$Platform$Cmd$batch(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(elm$core$Platform$Cmd$map, author$project$GearRatios$Types$RingSliderMsg, cmd),\n\t\t\t\t\telm$core$Platform$Cmd$none\n\t\t\t\t])) : elm$core$Platform$Cmd$none;\n\t\treturn _Utils_Tuple2(newModel, newCmd);\n\t});\nvar author$project$GearRatios$Update$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 2:\n\t\t\t\tvar sliderMsg = msg.a;\n\t\t\t\treturn A2(author$project$GearRatios$Update$handleRingSliderMsg, sliderMsg, model);\n\t\t\tcase 1:\n\t\t\t\tvar sliderMsg = msg.a;\n\t\t\t\treturn A2(author$project$GearRatios$Update$handleCogSliderMsg, sliderMsg, model);\n\t\t\tdefault:\n\t\t\t\treturn _Utils_Tuple2(model, elm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar elm$core$Basics$clamp = F3(\n\tfunction (low, high, number) {\n\t\treturn (_Utils_cmp(number, low) < 0) ? low : ((_Utils_cmp(number, high) > 0) ? high : number);\n\t});\nvar carwow$elm_slider$SingleSlider$calculateProgressPercentages = function (model) {\n\tvar value = A3(elm$core$Basics$clamp, model.ar, model.ap, model.S);\n\tvar progressRatio = 100 / (model.ap - model.ar);\n\tvar _n0 = model.I;\n\tif (_n0 === 1) {\n\t\treturn {X: (value - model.ar) * progressRatio, aa: 0.0};\n\t} else {\n\t\treturn {X: 0.0, aa: (model.ap - value) * progressRatio};\n\t}\n};\nvar carwow$elm_slider$SingleSlider$TrackClicked = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$json$Json$Decode$field = _Json_decodeField;\nvar elm$json$Json$Decode$float = _Json_decodeFloat;\nvar debois$elm_dom$DOM$offsetHeight = A2(elm$json$Json$Decode$field, 'offsetHeight', elm$json$Json$Decode$float);\nvar debois$elm_dom$DOM$offsetWidth = A2(elm$json$Json$Decode$field, 'offsetWidth', elm$json$Json$Decode$float);\nvar debois$elm_dom$DOM$offsetLeft = A2(elm$json$Json$Decode$field, 'offsetLeft', elm$json$Json$Decode$float);\nvar elm$json$Json$Decode$null = _Json_decodeNull;\nvar elm$json$Json$Decode$oneOf = _Json_oneOf;\nvar debois$elm_dom$DOM$offsetParent = F2(\n\tfunction (x, decoder) {\n\t\treturn elm$json$Json$Decode$oneOf(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$json$Json$Decode$field,\n\t\t\t\t\t'offsetParent',\n\t\t\t\t\telm$json$Json$Decode$null(x)),\n\t\t\t\t\tA2(elm$json$Json$Decode$field, 'offsetParent', decoder)\n\t\t\t\t]));\n\t});\nvar debois$elm_dom$DOM$offsetTop = A2(elm$json$Json$Decode$field, 'offsetTop', elm$json$Json$Decode$float);\nvar debois$elm_dom$DOM$scrollLeft = A2(elm$json$Json$Decode$field, 'scrollLeft', elm$json$Json$Decode$float);\nvar debois$elm_dom$DOM$scrollTop = A2(elm$json$Json$Decode$field, 'scrollTop', elm$json$Json$Decode$float);\nvar elm$json$Json$Decode$andThen = _Json_andThen;\nvar elm$json$Json$Decode$map4 = _Json_map4;\nvar debois$elm_dom$DOM$position = F2(\n\tfunction (x, y) {\n\t\treturn A2(\n\t\t\telm$json$Json$Decode$andThen,\n\t\t\tfunction (_n0) {\n\t\t\t\tvar x_ = _n0.a;\n\t\t\t\tvar y_ = _n0.b;\n\t\t\t\treturn A2(\n\t\t\t\t\tdebois$elm_dom$DOM$offsetParent,\n\t\t\t\t\t_Utils_Tuple2(x_, y_),\n\t\t\t\t\tA2(debois$elm_dom$DOM$position, x_, y_));\n\t\t\t},\n\t\t\tA5(\n\t\t\t\telm$json$Json$Decode$map4,\n\t\t\t\tF4(\n\t\t\t\t\tfunction (scrollLeftP, scrollTopP, offsetLeftP, offsetTopP) {\n\t\t\t\t\t\treturn _Utils_Tuple2((x + offsetLeftP) - scrollLeftP, (y + offsetTopP) - scrollTopP);\n\t\t\t\t\t}),\n\t\t\t\tdebois$elm_dom$DOM$scrollLeft,\n\t\t\t\tdebois$elm_dom$DOM$scrollTop,\n\t\t\t\tdebois$elm_dom$DOM$offsetLeft,\n\t\t\t\tdebois$elm_dom$DOM$offsetTop));\n\t});\nvar elm$json$Json$Decode$map3 = _Json_map3;\nvar debois$elm_dom$DOM$boundingClientRect = A4(\n\telm$json$Json$Decode$map3,\n\tF3(\n\t\tfunction (_n0, width, height) {\n\t\t\tvar x = _n0.a;\n\t\t\tvar y = _n0.b;\n\t\t\treturn {al: height, X: x, aJ: y, T: width};\n\t\t}),\n\tA2(debois$elm_dom$DOM$position, 0, 0),\n\tdebois$elm_dom$DOM$offsetWidth,\n\tdebois$elm_dom$DOM$offsetHeight);\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$json$Json$Decode$at = F2(\n\tfunction (fields, decoder) {\n\t\treturn A3(elm$core$List$foldr, elm$json$Json$Decode$field, decoder, fields);\n\t});\nvar elm$json$Json$Decode$map = _Json_map1;\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar carwow$elm_slider$SingleSlider$onInsideRangeClick = function (model) {\n\tvar valueDecoder = A3(\n\t\telm$json$Json$Decode$map2,\n\t\tF2(\n\t\t\tfunction (rectangle, mouseX) {\n\t\t\t\tvar adjustedValue = A3(elm$core$Basics$clamp, model.ar, model.ap, model.S);\n\t\t\t\tvar newValue = elm$core$Basics$round(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tvar _n0 = model.I;\n\t\t\t\t\t\tif (!_n0) {\n\t\t\t\t\t\t\treturn (adjustedValue / rectangle.T) * mouseX;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn adjustedValue + ((mouseX / rectangle.T) * (model.ap - adjustedValue));\n\t\t\t\t\t\t}\n\t\t\t\t\t}());\n\t\t\t\tvar adjustedNewValue = A3(elm$core$Basics$clamp, model.ar, model.ap, newValue);\n\t\t\t\treturn elm$core$String$fromFloat(adjustedNewValue);\n\t\t\t}),\n\t\tA2(\n\t\t\telm$json$Json$Decode$at,\n\t\t\t_List_fromArray(\n\t\t\t\t['target']),\n\t\t\tdebois$elm_dom$DOM$boundingClientRect),\n\t\tA2(\n\t\t\telm$json$Json$Decode$at,\n\t\t\t_List_fromArray(\n\t\t\t\t['offsetX']),\n\t\t\telm$json$Json$Decode$float));\n\treturn A2(elm$json$Json$Decode$map, carwow$elm_slider$SingleSlider$TrackClicked, valueDecoder);\n};\nvar carwow$elm_slider$SingleSlider$closestStep = F2(\n\tfunction (value, step) {\n\t\tvar roundedValue = elm$core$Basics$round(value);\n\t\tvar roundedStep = (elm$core$Basics$round(step) > 0) ? elm$core$Basics$round(step) : 1;\n\t\tvar remainder = roundedValue % roundedStep;\n\t\treturn (_Utils_cmp(remainder, (roundedStep / 2) | 0) > 0) ? ((roundedValue - remainder) + roundedStep) : (roundedValue - remainder);\n\t});\nvar carwow$elm_slider$SingleSlider$onOutsideRangeClick = function (model) {\n\tvar valueDecoder = A3(\n\t\telm$json$Json$Decode$map2,\n\t\tF2(\n\t\t\tfunction (rectangle, mouseX) {\n\t\t\t\tvar clickedValue = (((model.ap - model.ar) / rectangle.T) * mouseX) + model.ar;\n\t\t\t\tvar newValue = A2(carwow$elm_slider$SingleSlider$closestStep, clickedValue, model.aG);\n\t\t\t\treturn elm$core$String$fromInt(newValue);\n\t\t\t}),\n\t\tA2(\n\t\t\telm$json$Json$Decode$at,\n\t\t\t_List_fromArray(\n\t\t\t\t['target']),\n\t\t\tdebois$elm_dom$DOM$boundingClientRect),\n\t\tA2(\n\t\t\telm$json$Json$Decode$at,\n\t\t\t_List_fromArray(\n\t\t\t\t['offsetX']),\n\t\t\telm$json$Json$Decode$float));\n\treturn A2(elm$json$Json$Decode$map, carwow$elm_slider$SingleSlider$TrackClicked, valueDecoder);\n};\nvar carwow$elm_slider$SingleSlider$RangeChanged = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$string = _Json_decodeString;\nvar elm$html$Html$Events$targetValue = A2(\n\telm$json$Json$Decode$at,\n\t_List_fromArray(\n\t\t['target', 'value']),\n\telm$json$Json$Decode$string);\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar carwow$elm_slider$SingleSlider$onRangeChange = function (shouldFetchModels) {\n\treturn A3(\n\t\telm$json$Json$Decode$map2,\n\t\tcarwow$elm_slider$SingleSlider$RangeChanged,\n\t\telm$html$Html$Events$targetValue,\n\t\telm$json$Json$Decode$succeed(shouldFetchModels));\n};\nvar elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3(elm$core$List$foldr, elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar elm$html$Html$input = _VirtualDom_node('input');\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar elm$json$Json$Encode$string = _Json_wrap;\nvar elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$string(string));\n\t});\nvar elm$html$Html$Attributes$class = elm$html$Html$Attributes$stringProperty('className');\nvar elm$json$Json$Encode$bool = _Json_wrap;\nvar elm$html$Html$Attributes$boolProperty = F2(\n\tfunction (key, bool) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$bool(bool));\n\t});\nvar elm$html$Html$Attributes$disabled = elm$html$Html$Attributes$boolProperty('disabled');\nvar elm$html$Html$Attributes$max = elm$html$Html$Attributes$stringProperty('max');\nvar elm$html$Html$Attributes$min = elm$html$Html$Attributes$stringProperty('min');\nvar elm$html$Html$Attributes$step = function (n) {\n\treturn A2(elm$html$Html$Attributes$stringProperty, 'step', n);\n};\nvar elm$virtual_dom$VirtualDom$style = _VirtualDom_style;\nvar elm$html$Html$Attributes$style = elm$virtual_dom$VirtualDom$style;\nvar elm$html$Html$Attributes$type_ = elm$html$Html$Attributes$stringProperty('type');\nvar elm$html$Html$Attributes$value = elm$html$Html$Attributes$stringProperty('value');\nvar elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar carwow$elm_slider$SingleSlider$view = function (model) {\n\tvar trackAttributes = _List_fromArray(\n\t\t[\n\t\t\telm$html$Html$Attributes$class('input-range__track')\n\t\t]);\n\tvar trackAllAttributes = function () {\n\t\tvar _n1 = model.E;\n\t\tif (!_n1) {\n\t\t\treturn A2(\n\t\t\t\telm$core$List$append,\n\t\t\t\ttrackAttributes,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$Events$on,\n\t\t\t\t\t\t'click',\n\t\t\t\t\t\tcarwow$elm_slider$SingleSlider$onOutsideRangeClick(model))\n\t\t\t\t\t]));\n\t\t} else {\n\t\t\treturn trackAttributes;\n\t\t}\n\t}();\n\tvar progressPercentages = carwow$elm_slider$SingleSlider$calculateProgressPercentages(model);\n\tvar progressAttributes = _List_fromArray(\n\t\t[\n\t\t\telm$html$Html$Attributes$class('input-range__progress'),\n\t\t\tA2(\n\t\t\telm$html$Html$Attributes$style,\n\t\t\t'left',\n\t\t\telm$core$String$fromFloat(progressPercentages.X) + '%'),\n\t\t\tA2(\n\t\t\telm$html$Html$Attributes$style,\n\t\t\t'right',\n\t\t\telm$core$String$fromFloat(progressPercentages.aa) + '%')\n\t\t]);\n\tvar progressAllAttributes = function () {\n\t\tvar _n0 = model.E;\n\t\tif (!_n0) {\n\t\t\treturn A2(\n\t\t\t\telm$core$List$append,\n\t\t\t\tprogressAttributes,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$Events$on,\n\t\t\t\t\t\t'click',\n\t\t\t\t\t\tcarwow$elm_slider$SingleSlider$onInsideRangeClick(model))\n\t\t\t\t\t]));\n\t\t} else {\n\t\t\treturn progressAttributes;\n\t\t}\n\t}();\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('input-range-container')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$input,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$type_('range'),\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$min(\n\t\t\t\t\t\t\t\telm$core$String$fromFloat(model.ar)),\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$max(\n\t\t\t\t\t\t\t\telm$core$String$fromFloat(model.ap)),\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$value(\n\t\t\t\t\t\t\t\telm$core$String$fromFloat(model.S)),\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$step(\n\t\t\t\t\t\t\t\telm$core$String$fromFloat(model.aG)),\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('input-range'),\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$disabled(model.E),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$html$Html$Events$on,\n\t\t\t\t\t\t\t\t'change',\n\t\t\t\t\t\t\t\tcarwow$elm_slider$SingleSlider$onRangeChange(true)),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$html$Html$Events$on,\n\t\t\t\t\t\t\t\t'input',\n\t\t\t\t\t\t\t\tcarwow$elm_slider$SingleSlider$onRangeChange(false))\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\tA2(elm$html$Html$div, trackAllAttributes, _List_Nil),\n\t\t\t\t\t\tA2(elm$html$Html$div, progressAllAttributes, _List_Nil)\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('input-range-labels-container')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('input-range-label')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t\tmodel.as(model.ar))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('input-range-label input-range-label--current-value')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t\tA2(model.af, model.S, model.ap))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('input-range-label')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t\tmodel.aq(model.ap))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar elm$virtual_dom$VirtualDom$map = _VirtualDom_map;\nvar elm$html$Html$map = elm$virtual_dom$VirtualDom$map;\nvar author$project$GearRatios$View$renderCogSlider = function (slider) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$text('Cog Size: '),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$map,\n\t\t\t\tauthor$project$GearRatios$Types$CogSliderMsg,\n\t\t\t\tcarwow$elm_slider$SingleSlider$view(slider))\n\t\t\t]));\n};\nvar author$project$GearRatios$GearRatio$getCogValue = function (_n0) {\n\tvar value = _n0.b;\n\treturn value;\n};\nvar author$project$GearRatios$GearRatio$getRatioValue = function (_n0) {\n\tvar ringValue = _n0.a;\n\tvar cogValue = _n0.b;\n\treturn ringValue / cogValue;\n};\nvar author$project$GearRatios$GearRatio$getRingValue = function (_n0) {\n\tvar value = _n0.a;\n\treturn value;\n};\nvar elm$core$Basics$ge = _Utils_ge;\nvar elm$core$Basics$not = _Basics_not;\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar elm$core$Basics$abs = function (n) {\n\treturn (n < 0) ? (-n) : n;\n};\nvar elm$core$Basics$isInfinite = _Basics_isInfinite;\nvar elm$core$Basics$isNaN = _Basics_isNaN;\nvar elm$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\tf(value));\n\t\t} else {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar elm$core$String$length = _String_length;\nvar elm$core$String$cons = _String_cons;\nvar elm$core$String$fromChar = function (_char) {\n\treturn A2(elm$core$String$cons, _char, '');\n};\nvar elm$core$Bitwise$and = _Bitwise_and;\nvar elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;\nvar elm$core$String$repeatHelp = F3(\n\tfunction (n, chunk, result) {\n\t\treturn (n <= 0) ? result : A3(\n\t\t\telm$core$String$repeatHelp,\n\t\t\tn >> 1,\n\t\t\t_Utils_ap(chunk, chunk),\n\t\t\t(!(n & 1)) ? result : _Utils_ap(result, chunk));\n\t});\nvar elm$core$String$repeat = F2(\n\tfunction (n, chunk) {\n\t\treturn A3(elm$core$String$repeatHelp, n, chunk, '');\n\t});\nvar elm$core$String$padRight = F3(\n\tfunction (n, _char, string) {\n\t\treturn _Utils_ap(\n\t\t\tstring,\n\t\t\tA2(\n\t\t\t\telm$core$String$repeat,\n\t\t\t\tn - elm$core$String$length(string),\n\t\t\t\telm$core$String$fromChar(_char)));\n\t});\nvar elm$core$String$reverse = _String_reverse;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$Basics$neq = _Utils_notEqual;\nvar elm$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (isOkay(x)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isOkay = isOkay,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tisOkay = $temp$isOkay;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$String$foldr = _String_foldr;\nvar elm$core$String$toList = function (string) {\n\treturn A3(elm$core$String$foldr, elm$core$List$cons, _List_Nil, string);\n};\nvar myrho$elm_round$Round$addSign = F2(\n\tfunction (signed, str) {\n\t\tvar isNotZero = A2(\n\t\t\telm$core$List$any,\n\t\t\tfunction (c) {\n\t\t\t\treturn (c !== '0') && (c !== '.');\n\t\t\t},\n\t\t\telm$core$String$toList(str));\n\t\treturn _Utils_ap(\n\t\t\t(signed && isNotZero) ? '-' : '',\n\t\t\tstr);\n\t});\nvar elm$core$Char$fromCode = _Char_fromCode;\nvar myrho$elm_round$Round$increaseNum = function (_n0) {\n\tvar head = _n0.a;\n\tvar tail = _n0.b;\n\tif (head === '9') {\n\t\tvar _n1 = elm$core$String$uncons(tail);\n\t\tif (_n1.$ === 1) {\n\t\t\treturn '01';\n\t\t} else {\n\t\t\tvar headtail = _n1.a;\n\t\t\treturn A2(\n\t\t\t\telm$core$String$cons,\n\t\t\t\t'0',\n\t\t\t\tmyrho$elm_round$Round$increaseNum(headtail));\n\t\t}\n\t} else {\n\t\tvar c = elm$core$Char$toCode(head);\n\t\treturn ((c >= 48) && (c < 57)) ? A2(\n\t\t\telm$core$String$cons,\n\t\t\telm$core$Char$fromCode(c + 1),\n\t\t\ttail) : '0';\n\t}\n};\nvar myrho$elm_round$Round$splitComma = function (str) {\n\tvar _n0 = A2(elm$core$String$split, '.', str);\n\tif (_n0.b) {\n\t\tif (_n0.b.b) {\n\t\t\tvar before = _n0.a;\n\t\t\tvar _n1 = _n0.b;\n\t\t\tvar after = _n1.a;\n\t\t\treturn _Utils_Tuple2(before, after);\n\t\t} else {\n\t\t\tvar before = _n0.a;\n\t\t\treturn _Utils_Tuple2(before, '0');\n\t\t}\n\t} else {\n\t\treturn _Utils_Tuple2('0', '0');\n\t}\n};\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$core$String$toInt = _String_toInt;\nvar elm$core$Tuple$mapFirst = F2(\n\tfunction (func, _n0) {\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\tfunc(x),\n\t\t\ty);\n\t});\nvar myrho$elm_round$Round$toDecimal = function (fl) {\n\tvar _n0 = A2(\n\t\telm$core$String$split,\n\t\t'e',\n\t\telm$core$String$fromFloat(\n\t\t\telm$core$Basics$abs(fl)));\n\tif (_n0.b) {\n\t\tif (_n0.b.b) {\n\t\t\tvar num = _n0.a;\n\t\t\tvar _n1 = _n0.b;\n\t\t\tvar exp = _n1.a;\n\t\t\tvar e = A2(\n\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t0,\n\t\t\t\telm$core$String$toInt(\n\t\t\t\t\tA2(elm$core$String$startsWith, '+', exp) ? A2(elm$core$String$dropLeft, 1, exp) : exp));\n\t\t\tvar _n2 = myrho$elm_round$Round$splitComma(num);\n\t\t\tvar before = _n2.a;\n\t\t\tvar after = _n2.b;\n\t\t\tvar total = _Utils_ap(before, after);\n\t\t\tvar zeroed = (e < 0) ? A2(\n\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t'0',\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Maybe$map,\n\t\t\t\t\tfunction (_n3) {\n\t\t\t\t\t\tvar a = _n3.a;\n\t\t\t\t\t\tvar b = _n3.b;\n\t\t\t\t\t\treturn a + ('.' + b);\n\t\t\t\t\t},\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Maybe$map,\n\t\t\t\t\t\telm$core$Tuple$mapFirst(elm$core$String$fromChar),\n\t\t\t\t\t\telm$core$String$uncons(\n\t\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$String$repeat,\n\t\t\t\t\t\t\t\t\telm$core$Basics$abs(e),\n\t\t\t\t\t\t\t\t\t'0'),\n\t\t\t\t\t\t\t\ttotal))))) : A3(elm$core$String$padRight, e + 1, '0', total);\n\t\t\treturn _Utils_ap(\n\t\t\t\t(fl < 0) ? '-' : '',\n\t\t\t\tzeroed);\n\t\t} else {\n\t\t\tvar num = _n0.a;\n\t\t\treturn _Utils_ap(\n\t\t\t\t(fl < 0) ? '-' : '',\n\t\t\t\tnum);\n\t\t}\n\t} else {\n\t\treturn '';\n\t}\n};\nvar myrho$elm_round$Round$roundFun = F3(\n\tfunction (functor, s, fl) {\n\t\tif (elm$core$Basics$isInfinite(fl) || elm$core$Basics$isNaN(fl)) {\n\t\t\treturn elm$core$String$fromFloat(fl);\n\t\t} else {\n\t\t\tvar signed = fl < 0;\n\t\t\tvar _n0 = myrho$elm_round$Round$splitComma(\n\t\t\t\tmyrho$elm_round$Round$toDecimal(\n\t\t\t\t\telm$core$Basics$abs(fl)));\n\t\t\tvar before = _n0.a;\n\t\t\tvar after = _n0.b;\n\t\t\tvar r = elm$core$String$length(before) + s;\n\t\t\tvar normalized = _Utils_ap(\n\t\t\t\tA2(elm$core$String$repeat, (-r) + 1, '0'),\n\t\t\t\tA3(\n\t\t\t\t\telm$core$String$padRight,\n\t\t\t\t\tr,\n\t\t\t\t\t'0',\n\t\t\t\t\t_Utils_ap(before, after)));\n\t\t\tvar totalLen = elm$core$String$length(normalized);\n\t\t\tvar roundDigitIndex = A2(elm$core$Basics$max, 1, r);\n\t\t\tvar increase = A2(\n\t\t\t\tfunctor,\n\t\t\t\tsigned,\n\t\t\t\tA3(elm$core$String$slice, roundDigitIndex, totalLen, normalized));\n\t\t\tvar remains = A3(elm$core$String$slice, 0, roundDigitIndex, normalized);\n\t\t\tvar num = increase ? elm$core$String$reverse(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t\t'1',\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Maybe$map,\n\t\t\t\t\t\tmyrho$elm_round$Round$increaseNum,\n\t\t\t\t\t\telm$core$String$uncons(\n\t\t\t\t\t\t\telm$core$String$reverse(remains))))) : remains;\n\t\t\tvar numLen = elm$core$String$length(num);\n\t\t\tvar numZeroed = (num === '0') ? num : ((s <= 0) ? _Utils_ap(\n\t\t\t\tnum,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$String$repeat,\n\t\t\t\t\telm$core$Basics$abs(s),\n\t\t\t\t\t'0')) : ((_Utils_cmp(\n\t\t\t\ts,\n\t\t\t\telm$core$String$length(after)) < 0) ? (A3(elm$core$String$slice, 0, numLen - s, num) + ('.' + A3(elm$core$String$slice, numLen - s, numLen, num))) : _Utils_ap(\n\t\t\t\tbefore + '.',\n\t\t\t\tA3(elm$core$String$padRight, s, '0', after))));\n\t\t\treturn A2(myrho$elm_round$Round$addSign, signed, numZeroed);\n\t\t}\n\t});\nvar myrho$elm_round$Round$round = myrho$elm_round$Round$roundFun(\n\tF2(\n\t\tfunction (signed, str) {\n\t\t\tvar _n0 = elm$core$String$uncons(str);\n\t\t\tif (_n0.$ === 1) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tif ('5' === _n0.a.a) {\n\t\t\t\t\tif (_n0.a.b === '') {\n\t\t\t\t\t\tvar _n1 = _n0.a;\n\t\t\t\t\t\treturn !signed;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n2 = _n0.a;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar _n3 = _n0.a;\n\t\t\t\t\tvar _int = _n3.a;\n\t\t\t\t\treturn function (i) {\n\t\t\t\t\t\treturn ((i > 53) && signed) || ((i >= 53) && (!signed));\n\t\t\t\t\t}(\n\t\t\t\t\t\telm$core$Char$toCode(_int));\n\t\t\t\t}\n\t\t\t}\n\t\t}));\nvar author$project$GearRatios$View$renderGearRatio = function (gearRatio) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text('Ring Size: '),\n\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\telm$core$String$fromInt(\n\t\t\t\t\t\t\tauthor$project$GearRatios$GearRatio$getRingValue(gearRatio)))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text('Cog Size: '),\n\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\telm$core$String$fromInt(\n\t\t\t\t\t\t\tauthor$project$GearRatios$GearRatio$getCogValue(gearRatio)))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text('Ratio: '),\n\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tmyrho$elm_round$Round$round,\n\t\t\t\t\t\t\t2,\n\t\t\t\t\t\t\tauthor$project$GearRatios$GearRatio$getRatioValue(gearRatio)))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar author$project$GearRatios$View$renderRingSlider = function (slider) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$text('Ring Size: '),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$map,\n\t\t\t\tauthor$project$GearRatios$Types$RingSliderMsg,\n\t\t\t\tcarwow$elm_slider$SingleSlider$view(slider))\n\t\t\t]));\n};\nvar author$project$GearRatios$View$view = function (_n0) {\n\tvar cogSlider = _n0.aQ;\n\tvar ringSlider = _n0.a4;\n\tvar gearRatio = _n0.aW;\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tauthor$project$GearRatios$View$renderRingSlider(ringSlider),\n\t\t\t\tauthor$project$GearRatios$View$renderCogSlider(cogSlider),\n\t\t\t\tauthor$project$GearRatios$View$renderGearRatio(gearRatio)\n\t\t\t]));\n};\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Task$Perform = elm$core$Basics$identity;\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$core$Task$init = elm$core$Task$succeed(0);\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0;\n\t\treturn A2(elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(elm$core$Task$map, toMessage, task));\n\t});\nvar elm$url$Url$Http = 0;\nvar elm$url$Url$Https = 1;\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar elm$core$String$contains = _String_contains;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {aj: fragment, am: host, av: path, ax: port_, aA: protocol, aB: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$element = _Browser_element;\nvar author$project$GearRatios$main = elm$browser$Browser$element(\n\t{\n\t\taZ: function (_n0) {\n\t\t\treturn author$project$GearRatios$Update$init;\n\t\t},\n\t\ta5: author$project$GearRatios$Update$subscriptions,\n\t\ta7: author$project$GearRatios$Update$update,\n\t\ta9: author$project$GearRatios$View$view\n\t});\n_Platform_export({'GearRatios':{'init':author$project$GearRatios$main(\n\telm$json$Json$Decode$succeed(0))(0)}});}(this));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './GearRatios.elm';\nimport registerServiceWorker from './registerServiceWorker';\n\nElm.GearRatios.init({\n  node: document.getElementById('root')\n});\n\nregisterServiceWorker();\n"],"sourceRoot":""}